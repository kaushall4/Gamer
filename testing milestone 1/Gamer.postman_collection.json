{
	"info": {
		"_postman_id": "f3894b7d-57a7-4746-b4e8-8082f3eddca7",
		"name": "Gamer",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "0.1 Testservice",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/Gamer-0.1/resource/test/test",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"Gamer-0.1",
						"resource",
						"test",
						"test"
					]
				}
			},
			"response": []
		},
		{
			"name": "1. Gamerliste",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function(){",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"validate response\", function(){",
							"    pm.response.to.be.json;",
							"    pm.expect(pm.response.text()).to.include(\"title\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URI}}gamer/list",
					"host": [
						"{{URI}}gamer"
					],
					"path": [
						"list"
					]
				}
			},
			"response": []
		},
		{
			"name": "2. Read Gamer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function(){",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"validate response\", function(){",
							"    pm.response.to.be.json;",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson.spiel).to.eql(\"Black Ops Cold War\");",
							"  ",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URI}}gamer/read?spiel=Black Ops Cold War",
					"host": [
						"{{URI}}gamer"
					],
					"path": [
						"read"
					],
					"query": [
						{
							"key": "spiel",
							"value": "Black Ops Cold War"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "3. Read unknown Gamer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\",function(){",
							"    pm.response.to.have.status(404)",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URI}}gamer/read?676c7e6c-8042-11eb-9439-0242ac130002",
					"host": [
						"{{URI}}gamer"
					],
					"path": [
						"read"
					],
					"query": [
						{
							"key": "676c7e6c-8042-11eb-9439-0242ac130002",
							"value": null
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "4. Read Gamer with invalid uuid",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\",function(){",
							"    pm.response.to.have.status(400);",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URI}}gamer/read?uuid=ecd86148-xyz-43c6-81ed-f3f4595965dc",
					"host": [
						"{{URI}}gamer"
					],
					"path": [
						"read"
					],
					"query": [
						{
							"key": "uuid",
							"value": "ecd86148-xyz-43c6-81ed-f3f4595965dc"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "URI",
			"value": ""
		}
	]
}